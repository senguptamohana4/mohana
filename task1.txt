public class MathOperations {

    public int add(int a, int b) {
        return a + b;
    }

    public int subtract(int a, int b) {
        return a - b;
    }

    public int multiply(int a, int b) {
        return a * b;
    }

    public int divide(int a, int b) {
        if (b == 0) {
            throw new IllegalArgumentException("Division by zero is not allowed.");
        }
        return a / b;
    }
}
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

public class MathOperationsTest {

    private final MathOperations mathOperations = new MathOperations();

    @Test
    public void testAdd() {
        assertEquals(5, mathOperations.add(2, 3));
        assertEquals(-1, mathOperations.add(2, -3));
        assertEquals(0, mathOperations.add(0, 0));
    }

    @Test
    public void testSubtract() {
        assertEquals(1, mathOperations.subtract(3, 2));
        assertEquals(5, mathOperations.subtract(2, -3));
        assertEquals(0, mathOperations.subtract(0, 0));
    }

    @Test
    public void testMultiply() {
        assertEquals(6, mathOperations.multiply(2, 3));
        assertEquals(-6, mathOperations.multiply(2, -3));
        assertEquals(0, mathOperations.multiply(2, 0));
    }

    @Test
    public void testDivide() {
        assertEquals(2, mathOperations.divide(6, 3));
        assertEquals(-2, mathOperations.divide(6, -3));
        
        Exception exception = assertThrows(IllegalArgumentException.class, () -> {
            mathOperations.divide(1, 0);
        });
        assertEquals("Division by zero is not allowed.", exception.getMessage());
    }
}
